// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/join": {
            "post": {
                "description": "Игрок присоединяется к текущей партии и получает ID и цвет фигур.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "Присоединиться к игре",
                "parameters": [
                    {
                        "description": "Имя игрока",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.joinRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.joinResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.errorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/server.errorResponse"
                        }
                    }
                }
            }
        },
        "/move": {
            "post": {
                "description": "Игрок делает ход с клетки \"from\" на клетку \"to\".",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "Сделать ход",
                "parameters": [
                    {
                        "description": "Данные хода",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.moveRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.moveResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.errorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/server.errorResponse"
                        }
                    }
                }
            }
        },
        "/reset": {
            "post": {
                "description": "Полностью сбрасывает текущую партию, удаляя игроков и заново создавая доску.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "Сбросить игру",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.resetResponse"
                        }
                    }
                }
            }
        },
        "/state": {
            "get": {
                "description": "Возвращает текущее состояние доски, чей сейчас ход и информацию о игроке.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "Получить состояние игры",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.stateResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/server.errorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "server.errorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "server.figureResponse": {
            "type": "object",
            "properties": {
                "is_king": {
                    "type": "boolean"
                },
                "is_none": {
                    "type": "boolean"
                },
                "is_white": {
                    "type": "boolean"
                }
            }
        },
        "server.joinRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "Имя игрока",
                    "type": "string"
                }
            }
        },
        "server.joinResponse": {
            "type": "object",
            "properties": {
                "color": {
                    "description": "\"white\" или \"black\"",
                    "type": "string"
                },
                "player_id": {
                    "description": "Уникальный ID игрока",
                    "type": "string"
                }
            }
        },
        "server.moveRequest": {
            "type": "object",
            "properties": {
                "from": {
                    "description": "Пример: \"c3\"",
                    "type": "string"
                },
                "player_id": {
                    "type": "string"
                },
                "to": {
                    "description": "Пример: \"d4\"",
                    "type": "string"
                }
            }
        },
        "server.moveResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "server.resetResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                }
            }
        },
        "server.stateResponse": {
            "type": "object",
            "properties": {
                "board": {
                    "description": "Доска 8x8",
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/server.figureResponse"
                        }
                    }
                },
                "isWhiteTurn": {
                    "description": "Чей ход сейчас",
                    "type": "boolean"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
